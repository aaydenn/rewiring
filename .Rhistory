#calculate agglomerative coefficient for each clustering linkage method
sapply(m, ac)
clusGap(tmp, FUN = hcut, nstart = 25, K.max = 10, B = 50)
cluster::clusGap(tmp, FUN = hcut, nstart = 25, K.max = 10, B = 50)
library(cluster)
clusGap(tmp, FUN = hcut, nstart = 25, K.max = 10, B = 50)
clusGap(tmp, FUN = hclust, nstart = 25, K.max = 10, B = 50)
?clusGap
clust <- hclust(tmp, method = "complete")
tmp
is.na(tmp)
is.na(tmp) |> table()
clust <- agnes(tmp, method = "complete")
plot(clust)
clust
clust <- agnes(tmp, method = "complete")
plot(clust)
clust <- agnes(delta$D.Blood.CCR.AL, method = "complete")
plot(clust)
#function to compute agglomerative coefficient
ac <- function(mat,x) {
cluster::agnes(mat, method = x)$ac
}
#calculate agglomerative coefficient for each clustering linkage method
sapply(m, ac, mat = delta$D.Blood.CCR.AL)
clust <- agnes(delta$D.Blood.CCR.AL, method = "ward")
plot(clust)
clusGap(delta$D.Blood.CCR.AL)
silhouette(delta$D.Blood.CCR.AL)
clusGap(delta$D.Blood.CCR.AL, FUNcluster = hclust)
clusGap(delta$D.Blood.CCR.AL, FUNcluster = hclust,K.max = 10)
clusGap(delta$D.Blood.CCR.AL, FUNcluster = pam1, K.max = 10)
clusGap(delta$D.Blood.CCR.AL, FUNcluster = kmeans, K.max = 10)
gap <- clusGap(delta$D.Blood.CCR.AL, FUNcluster = hclust,K.max = 10)
gap <- clusGap(delta$D.Blood.CCR.AL, FUNcluster = kmeans, K.max = 10)
plot(gap)
gap <- clusGap(delta$D.Blood.CCR.AL, FUNcluster = hclust, K.max = 10)
par(mar=(2,2,2,2))
par(mar=c(2,2,2,2))
plot(gap)
gap <- clusGap(delta$D.Blood.CCR.AL, FUNcluster = kmeans, K.max = 10)
clust <- kmeans(delta$D.Blood.CCR.AL, method = "ward")
clust <- kmeans(delta$D.Blood.CCR.AL,centers = 4)
library(factoextra)
install.packages("factoextra")
library(factoextra)
fviz_gap_stat(gap)
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
vertex_attr(theta.graphs$Blood.AL)
ceb <- cluster_edge_betweenness(delta$D.Blood.CCR.AL)
ceb <- cluster_edge_betweenness(delta.graphs$D.Blood.CCR.AL)
dendPlot(ceb, mode="hclust")
ceb <- cluster_louvain(delta.graphs$D.Blood.CCR.AL)
dendPlot(ceb, mode="hclust")
ceb <- cluster_label_prop(delta.graphs$D.Blood.CCR.AL)
ceb
ceb <- cluster_edge_betweenness(delta.graphs$D.Blood.CCR.AL)
ceb
ceb <- cluster_louvain(delta.graphs$D.Blood.CCR.AL)
ceb
ceb <- cluster_louvain(delta.graphs$D.Blood.ICR.AL);ceb
?cluster_louvain
?cluster_leading_eigen
?cluster_leiden
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL) ;ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 1);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 2);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 5);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.1);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.01);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.07);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.06);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.03);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.02);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.01);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.021);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.CCR.AL, resolution_parameter = 0.023);ceb
ceb <- cluster_leiden(delta.graphs$D.Blood.ICR.AL, resolution_parameter = 0.02);ceb
membership(ceb)
ceb$nb_clusters
ceb$nb_clusters
ceb$membership
ceb$membership |> table()
ceb <- cluster_louvain(delta.graphs$D.Blood.ICR.AL);ceb
ceb$membership |> table()
ceb <- cluster_louvain(delta.graphs$D.Blood.CCR.AL);ceb
ceb$membership |> table()
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
par(mar = c(1, 1, 1, 1))
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
# vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
png("figures/theta.al.blood.png", units = "in", res = 320)
dev.off()
png("figures/theta.al.blood.png", units = "in", res = 320)
svg("figures/theta.al.blood.png", units = "in", res = 320)
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
# vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
dev.off()
svg("figures/theta.al.blood.png")
plot(
theta.graphs$Blood.AL,
vertex.label.cex = 0,
# vertex.label = NA,
vertex.size = eigen_centrality(theta.graphs$Blood.AL)$vector*5,
vertex.color = alpha(colors$Blood.AL,0.85),
vertex.label.color = "black",
vertex.label.dist = 0.5,
edge.width = 1,
# edge.color = "grey32",
layout = layout_with_fr(theta.graphs$Blood.AL),
main = "AL"
)
dev.off()
fossil::rand.index(ceb$1)
fossil::rand.index(ceb$`1`)
ceb$1
ceb[[1]]
fossil::rand.index(ceb[[1]])
fossil::rand.index(ceb[[1]],ceb[[2]])
fossil::jaccard(ceb[[1]],ceb[[2]])
cl <- lapply(delta.graphs, cluster_louvain)
cl
cl$D.Blood.CCR.AL$memberships
cl$D.Blood.CCR.AL$membership
data.frame(mirna=nrow(delta.graphs$D.Blood.CCR.AL),ccr.al=cl$D.Blood.CCR.AL$memberships,icr.al=cl$D.Blood.ICR.AL$memberships,icr.ccr=cl$D.Blood.ICR.CCR$memberships)
cl$D.Blood.CCR.AL$membership
data.frame(mirna=nrow(delta.graphs$D.Blood.CCR.AL),ccr.al=cl$D.Blood.CCR.AL$membership,icr.al=cl$D.Blood.ICR.AL$membership,icr.ccr=cl$D.Blood.ICR.CCR$membership)
data.frame(mirna=rownames(delta.graphs$D.Blood.CCR.AL),ccr.al=cl$D.Blood.CCR.AL$membership,icr.al=cl$D.Blood.ICR.AL$membership,icr.ccr=cl$D.Blood.ICR.CCR$membership)
rownames(delta.graphs$D.Blood.CCR.AL)
data.frame(mirna=rownames(delta$D.Blood.CCR.AL),ccr.al=cl$D.Blood.CCR.AL$membership,icr.al=cl$D.Blood.ICR.AL$membership,icr.ccr=cl$D.Blood.ICR.CCR$membership)
matrix(0, nrow = cl$D.Blood.CCR.AL$vcount, ncol = cl$D.Blood.ICR.AL$vcount)
cl$D.Blood.ICR.AL$vcount
cl$D.Blood.ICR.AL$names
cl$D.Blood.ICR.AL$vcount
cl$D.Blood.ICR.AL$membership
cl$D.Blood.ICR.AL$modularity
cl$D.Blood.ICR.AL$memberships
png("figures/theta.blood.al.png", units = "in", res = 320)
png("theta.blood.al.png", units = "in", res = 320)
load("result/targets.Rdata")
# filter targets for 98 mirna
targets <- targets.unique[targets.unique$mirna %in% colnames(theta[[1]]),]
load("G:/Drive'ım/CR-miRNA/Results/2022-06-27-jgl-optimal.Rdata")
# filter targets for 98 mirna
targets <- targets.unique[targets.unique$mirna %in% colnames(theta[[1]]),]
theta <- list(
Blood.AL = ans2$jgl.res$theta$`Blood AL`,
Blood.CCR = ans2$jgl.res$theta$`Blood CCR`,
Blood.ICR = ans2$jgl.res$theta$`Blood ICR`,
MFP.AL = ans2$jgl.res$theta$`MFP AL`,
MFP.CCR = ans2$jgl.res$theta$`MFP CCR`,
MFP.ICR = ans2$jgl.res$theta$`MFP ICR`
)
# filter targets for 98 mirna
targets <- targets.unique[targets.unique$mirna %in% colnames(theta[[1]]),]
targets
targets |> filter(symbol == "Tnrc6b")
targets |> group_by(symbol)
targets |> group_by(symbol) |> count()
targets |> group_by(symbol) |> count() |> arrange(desc(n))
load("result/theta_delta.RData")
load("result/mouse-data-features.RData")
load("result/targets.Rdata")
load("result/DE_miRNAs.RData")
targets.unique[targets.unique$mirna=="mmu-miR-3104-5p"]
targets.unique[targets.unique$mirna=="mmu-miR-3104-5p",]
targets.unique[targets.unique$mirna=="mmu-miR-3104-3p",]
targets.unique[targets.unique$mirna=="mmu-miR-3104-5p",]
targets.unique[targets.unique$mirna=="mmu-miR-3104-5p",]
library(stringr)
library(ggpubr)
load("result/mouse-data-features.RData")
colnames(mouse.Data) <- toupper(colnames(mouse.Data))
colnames(mouse.Data) <- gsub("ICRR|ICRRF", "ICR", colnames(mouse.Data))
as.data.frame(mouse.Data) |>
# T95: blood and mfp same diet, age
ggscatter(x = "AL_T95_BLOOD_W50",
y = "AL_T95_MFP_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "Blood of AL fed mice",
ylab = "MFP of AL fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)) +
theme(text=element_text(size = 18)) -> p1
p1
cbind(pData(full.Data), features)
library(Biobase)
exp_raw0 <- log2(Biobase::exprs(full.Data))
load("G:\Drive'ım\CR-miRNA\Data\full.Data.RData")
load("G:/Drive'ım/CR-miRNA/Data/full.Data.RData")
exp_raw0 <- log2(Biobase::exprs(full.Data))
pData(full.Data) <- cbind(pData(full.Data), features)
pData(full.Data)
features
rownames(features) <- colnames(exp_raw0)
rownames(features)
## ignore brain data
keep <- features[features$tissue != "Brain", ]
exp_raw <- exp_raw0[, rownames(keep)]
exp_raw
p_data0 <- pData(full.Data)[pData(full.Data)$tissue != "Brain", ]
# TODO: fix diet names earlier
p_data <- mutate(p_data0,
diet = ifelse(diet == "ICRR" | diet == "ICRRF", "ICR", diet))
## calculate principal components
PCAraw <- prcomp(t(exp_raw), scale. = FALSE)
percentVarRaw <- round(100 * PCAraw$sdev^2 / sum(PCAraw$sdev^2), 1)
sd_ratio_raw <- sqrt(percentVarRaw[2] / percentVarRaw[1])
dataGGnorm <- data.frame(PC1 = PCA_norm$x[,1], PC2 = PCA_norm$x[,2],
Tissue = p_data$tissue, Diet   = p_data$diet)
# data frame for ggplot aesthetics
dataGGraw <- data.frame(PC1 = PCAraw$x[,1], PC2 = PCAraw$x[,2],
Tissue = p_data$tissue, Diet = p_data$diet)
dataGGraw
p0 <- ggplot(dataGGnorm, aes(PC1, PC2, colour = Tissue,
shape  = Diet)) +
geom_point(size=2) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0),
legend.background = element_blank()) +
coord_fixed(ratio = sd_ratio_norm) +
theme(legend.position = "bottom") +
theme(text=element_text(family="Times", size = 18))
p0 <- ggplot(dataGGraw, aes(PC1, PC2, size = 10)) +
geom_point(aes(colour = Tissue,
shape  = Diet)) +
xlab(paste0("PC1, VarExp: ", percentVarRaw[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarRaw[2], "%")) +
scale_color_manual(values = c("salmon2", 'royalblue2')) +
# coord_fixed(ratio = sd_ratio_raw*2) +
ggtitle("PCA plot of the log-transformed raw expression data") +
theme_bw() +
theme(text=element_text(family="Times",size = 18))
p0
p01 <- ggplot(dataGGraw, aes(PC1, PC2, size = 10)) +
geom_point(aes(colour = Tissue,
shape  = Diet)) +
xlab(paste0("PC1, VarExp: ", percentVarRaw[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarRaw[2], "%")) +
scale_color_manual(values = c("salmon2", 'royalblue2')) +
# coord_fixed(ratio = sd_ratio_raw*2) +
ggtitle("PCA plot of the log-transformed raw expression data") +
theme_bw() +
theme(text=element_text(family="Times",size = 18))
exp_norm0 <- Biobase::exprs(eset)
exp_norm <- exp_norm0[,rownames(keep)]
PCA_norm <- prcomp(t(exp_norm), scale. = FALSE)
dataGGnorm <- data.frame(PC1 = PCA_norm$x[,1], PC2 = PCA_norm$x[,2],
Tissue = p_data$tissue, Diet   = p_data$diet)
p02 <- ggplot(dataGGnorm, aes(PC1, PC2, size = 10)) +
geom_point(colour = Tissue,
shape  = Diet) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
dataGGnorm
ggplot(dataGGnorm, aes(PC1, PC2, size = 10))
geom_point(colour = Tissue,
shape  = Diet)
p02 <- ggplot(dataGGnorm, aes(PC1, PC2, size = 10)) +
geom_point(aes(colour = Tissue,
shape  = Diet)) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
percentVarNorm <- round(100*PCA_norm$sdev^2/sum(PCA_norm$sdev^2),1)
dataGGnorm <- data.frame(PC1 = PCA_norm$x[,1], PC2 = PCA_norm$x[,2],
Tissue = p_data$tissue, Diet   = p_data$diet)
p02 <- ggplot(dataGGnorm, aes(PC1, PC2, size = 10)) +
geom_point(aes(colour = Tissue,
shape  = Diet)) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
p02
p02 <- ggplot(dataGGnorm, aes(PC1, PC2, size = 10)) +
geom_point(aes(colour = Tissue,
shape  = Diet)) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
p02
p02 <- ggplot(dataGGnorm, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet), size = 10) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
p02
p02 <- ggplot(dataGGnorm, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet), size = 5) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
p02
ggsave("figures/PCAplotNorm.png", p01, units = "in", width = 8, height = 8, dpi = 300)
p01 <- ggplot(dataGGraw, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet),size = 5) +
xlab(paste0("PC1, VarExp: ", percentVarRaw[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarRaw[2], "%")) +
scale_color_manual(values = c("salmon2", 'royalblue2')) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed raw expression data") +
theme_bw() +
theme(text=element_text(family="Times",size = 18))
ggsave("figures/PCAplotNorm.png", p01, units = "in", width = 8, height = 8, dpi = 300)
ggsave("figures/pca_raw.png", p01, units = "in", width = 8, height = 8, dpi = 300)
p01 <- ggplot(dataGGraw, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet),size = 5) +
xlab(paste0("PC1, VarExp: ", percentVarRaw[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarRaw[2], "%")) +
scale_color_manual(values = c("salmon2", 'royalblue2')) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed raw expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 18))
ggsave("figures/pca_raw.png", p01, units = "in", width = 8, height = 8, dpi = 300)
ggsave("figures/pca_norm.png", p02, units = "in", width = 8, height = 8, dpi = 300)
p01 <- ggplot(dataGGraw, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet),size = 5) +
xlab(paste0("PC1, VarExp: ", percentVarRaw[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarRaw[2], "%")) +
scale_color_manual(values = c("salmon2", 'royalblue2')) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed raw expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 15))
ggsave("figures/pca_raw.png", p01, units = "in", width = 8, height = 8, dpi = 300)
p02 <- ggplot(dataGGnorm, aes(PC1, PC2)) +
geom_point(aes(colour = Tissue,
shape  = Diet), size = 5) +
xlab(paste0("PC1, VarExp: ", percentVarNorm[1], "%")) +
ylab(paste0("PC2, VarExp: ", percentVarNorm[2], "%")) +
scale_color_manual(values = c("salmon2", "royalblue2")) +
# coord_fixed(ratio = sd_ratio_raw*2) +
# ggtitle("PCA plot of the log-transformed norm. expression data") +
theme_bw() +
theme(legend.position = c(0.99, 0.01), legend.justification = c(1,0), legend.background = element_blank()) +
# theme(legend.position = "bottom") +
theme(text=element_text(size = 15))
ggsave("figures/pca_norm.png", p02, units = "in", width = 8, height = 8, dpi = 300)
library(patchwork)
p1 + p2
p2 + p3
as.data.frame(mouse.Data) |>
# T95 and T106: different diet, same tissue, age
ggscatter(x = "AL_T95_MFP_W50",
y = "CCR_T106_MFP_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "MFP of AL fed mice",
ylab = "MFP of CCR fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)
) + theme(text=element_text(size = 18)) -> p2
ggsave(p2, file = "figures/same_diet_T95_T106_mfp.png", width = 8, height = 8, units = "in", dpi = 300)
as.data.frame(mouse.Data) |>
# T95 and T106: different diet, same tissue, age
ggscatter(x = "AL_T95_BLOOD_W50",
y = "CCR_T106_BLOOD_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "Blood of AL fed mice",
ylab = "Blood of CCR fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)) + theme(text=element_text(size = 18)) -> p3
as.data.frame(mouse.Data) |>
# T95 and T106: different diet, same tissue, age
ggscatter(x = "AL_T95_BLOOD_W50",
y = "CCR_T106_BLOOD_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "Blood of AL fed mice",
ylab = "Blood of CCR fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)) + theme(text=element_text(size = 18)) -> p3
p2 + p3
p4 <- p2 + p3
ggsave("figures/same_diet.png",p4,width = 8, height = 8, units = "in", dpi = 300)
ggsave("figures/same_diet.png",p4,width = 8, height = 5, units = "in", dpi = 300)
ggsave("figures/same_diet.png",p4,width = 8, height = 4, units = "in", dpi = 300)
as.data.frame(mouse.Data) |>
# T95 and T106: different diet, same tissue, age
ggscatter(x = "AL_T95_MFP_W50",
y = "CCR_T106_MFP_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "MFP of AL fed mice",
ylab = "MFP of CCR fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)
) + theme(text=element_text(size = 14)) -> p2
as.data.frame(mouse.Data) |>
# T95 and T106: different diet, same tissue, age
ggscatter(x = "AL_T95_BLOOD_W50",
y = "CCR_T106_BLOOD_W50",
add = "reg.line", conf.int = TRUE,
cor.coef = F, cor.method = "pearson",
xlab = "Blood of AL fed mice",
ylab = "Blood of CCR fed mice",
ggtheme = theme_bw(),
color	= alpha("black", 0.5)) + theme(text=element_text(size = 14)) -> p3
p4 <- p2 + p3
ggsave("figures/same_diet.png",p4,width = 8, height = 8, units = "in", dpi = 300)
ggsave("figures/same_diet.png",p4,width = 8, height = 4, units = "in", dpi = 300)
